When would you want to use a remote repository rather than keeping all your work
local?

    To keep backup of my repository and to share it with public or people who I
    work with.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Because it is unnecessary to stay up to date at all time since I might consider
    my local directory to be running not well enough for public or people who I
    work with to see it or to work upon it yet and expecting pushing my local directory
    to remotes when certain work or feature has been consider done by me.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks is like cloning but it happens between GitHub repositories. Clones is
    cloning repositories from GitHub to local, or local directory to another
    local directory. Branches are creating a different version that is outside
    your master branches.

    Using forks is useful when I want to clone a repository from someone else's
    GitHub repository but I also want to cite that person as the one that owns
    it.

    Using clones is useful when I want to clone my GitHub repo that I forked
    into my local. It is also useful if I want to clone it into another repo in
    my local.

    Using branches is useful when I want to modify my master version but I dont
    want to screw up my master in the sense that I dont want to break it. It is
    also useful when I am running a debugging process whenever I find a bug.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    It is enabling me to work offline better than not knowing what has been
    going on recently on the remote copy. It makes me know what are the recent
    commits by other collaborators, what are they trying to do or planning to
    change, etc.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    I think how I would collaborate without using Git or GitHub is by using
    dropbox since it is shareable and has history tracking applied to the
    system. However I think it would be harder since it doesn't have any system
    of issue raising, merging, pulling, etc. to ease the collaboration process.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    I would want to make changes directly in master maybe if there is a bug
    found. This is beneficial because bug needs immediate response and if the
    debugging works, it must've been merged and pushed directly into the master
    and without making pull request since it would've been unnessecary.

    For making changes in branches, the main reason is for making a local, free
    to explore version that won't mess around with the master. It is especially
    important if I'm going to make a new feature that I don't want to introduce
    yet to the master branch since it would be declined by my coworkers or may
    be buggy.
